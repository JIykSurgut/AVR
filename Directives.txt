1. EQU (equvalent) эквивалентны
Директива .equ в AVR ассемблере используется для определения символьных констант (или эквивалентов) для числовых значений. Эта директива позволяет задать имена для чисел или адресов, делая код более читаемым и обеспечивая легкость в изменении значений в одном месте кода
Пример:
.equ LED_PIN,  PORTB0     ; Определение константы LED_PIN как PORTB0
.equ DELAY_MS, 100        ; Определение константы DELAY_MS как 100

; Использование констант в коде
sbi PORTB, LED_PIN         ; Установить бит LED_PIN в регистре PORTB
ldi r16, DELAY_MS         ; Загрузить значение DELAY_MS в регистр r16


2. DEF (definitions) определения
Директива .def в AVR ассемблере используется для определения символьных имён (псевдонимов) для регистров. Это делается для повышения читаемости и понимания кода. Вместо использования номеров регистров, вы можете определить понятные имена для регистров и затем использовать их в вашем коде.Дальше можно переопределить регистр
Пример
.def my_var = r16  ; Определение псевдонима my_var для регистра r16

; Использование псевдонима
ldi my_var, 0x55  ; Загрузить значение 0x55 в регистр r16, используя my_var

3. Byte
Директива .byte в языке ассемблера используется для определения последовательности байтов (8 бит) в памяти. Она позволяет вам объявлять и инициализировать байты данных в вашем ассемблерном коде.

Пример использования директивы .byte:
my_data:
    .byte 0x55, 0xAA, 0x42, 0x77   ; Определение последовательности байтов

4. CSEG
Директива CSEG определяет начало сегмента кода. Файл Ассемблера может состоять из нескольких сегментов кода, которые при сборке объединяются в один сегмент кода. Директиву BYTE нельзя использовать внутри сегмента кода. Тип сегмента по умолчанию — «Код». Сегменты кода имеют собственный счетчик местоположений, который является счетчиком слов. Директива ORG может использоваться для размещения кода и констант в определенных местах памяти программы. Директива не принимает никаких параметров.

.DSEG ; Start data segment 
vartab: .BYTE 4 ; Reserve 4 bytes in SRAM

.CSEG ; Start code segment 
const: .DW 2 ; Write 0x0002 in prog.mem. 
mov r1,r0 ; Do something

5. DW
Определите константные слова в памяти программы и EEPROM.

Директива DW резервирует ресурсы памяти в памяти программы или EEPROM. Чтобы иметь возможность ссылаться на зарезервированные местоположения, директиве DW должна предшествовать метка. Директива DW принимает список выражений и должна содержать хотя бы одно выражение. Директива DB должна быть размещена в сегменте кода или сегменте EEPROM.

.CSEG 
varlist: .DW 0, 0xffff, 0b1001110001010101, -32768, 65535

.ESEG 
eevarlst: .DW 0,0xffff,10

6. ELIF and ELSE

7. ESEG
